{"version":3,"sources":["GlobalContext.js","components/TodoList.js","components/Login.js","components/Signup.js","components/Header.js","PrivateRoute.js","components/UpdateProfile.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalContext","React","createContext","useStickyState","defaultValue","key","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","GlobalContextProvider","children","authenticatedUser","setAuthenticatedUser","accessToken","setAccessToken","error","setError","loading","useNavigate","axios","interceptors","response","use","res","err","console","log","data","setAuthInfo","user","token","setToken","initAxios","resetPassword","email","updateEmail","updatePassword","password","Provider","TodoList","globalContext","useContext","todos","setTodos","setLoading","i","event","a","id","target","disabled","delete","then","success","Error","alert","finally","state","filter","todo","index","get","className","onClick","content","style","width","map","item","onInput","updated","onChangeTodo","put","post","saveTodo","deleteTodo","Login","useRef","emailRef","passwordRef","navigate","e","preventDefault","current","access_token","setTimeout","onSubmit","type","ref","required","to","Signup","nameRef","passwordConfirmRef","name","confirm_password","Header","href","classList","toggle","PrivateRoute","undefined","this","tokenInterceptor","request","eject","req","headers","UpdateProfile","validate","trim","form","setForm","Object","keys","forEach","fieldName","bind","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28b529ff.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useContext, useState, useEffect } from \"react\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const GlobalContext = React.createContext({});\r\n\r\nfunction useStickyState(defaultValue, key) {\r\n  const [value, setValue] = React.useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null\r\n      ? JSON.parse(stickyValue)\r\n      : defaultValue;\r\n  });\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n}\r\n\r\naxios.setToken = function(token) {\r\n  if (this.tokenInterceptor !== undefined) this.interceptors.request.eject(this.tokenInterceptor);\r\n  this.tokenInterceptor = this.interceptors.request.use((req) => {\r\n    if (token) {\r\n      req.headers['Authorization'] = `Bearer ${token}`\r\n    } else {\r\n      delete req.headers['Authorization']\r\n    }\r\n    return req\r\n  })\r\n}\r\nexport function GlobalContextProvider({ children }) {\r\n  const [authenticatedUser, setAuthenticatedUser] = useStickyState(null, 'authenticatedUser')\r\n  const [accessToken, setAccessToken] = useStickyState(null, 'accessToken')\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n  axios.interceptors.response.use(res => {\r\n    return res\r\n  }, (err) => {\r\n    console.log(err.data)\r\n    // if (err.response.status === 422 && err.response.data && err.response.data.errors) {\r\n    //   let errors = err.response.data.errors;\r\n    //   setError(errors[ Object.keys(errors)[0] ][0])\r\n    // }\r\n    throw err\r\n  })\r\n\r\n  function setAuthInfo({user, token}) {\r\n    setAuthenticatedUser(user)\r\n    setAccessToken(token)\r\n    axios.setToken(token)\r\n  }\r\n\r\n  function initAxios() {\r\n    axios.setToken(accessToken)\r\n  }\r\n  \r\n  function resetPassword(email) {\r\n    // return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    // return authenticatedUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    // return authenticatedUser.updatePassword(password)\r\n  }\r\n\r\n  const value = {\r\n    setAuthInfo,\r\n    axios,\r\n    authenticatedUser,\r\n    setAuthenticatedUser,\r\n    initAxios,\r\n    error,\r\n    setError,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={value}>\r\n      {!loading && children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import React, {  useState, useContext, useEffect } from \"react\"\r\nimport { GlobalContext } from \"../GlobalContext\"\r\n\r\nexport default function TodoList() {\r\n  const globalContext = useContext(GlobalContext)\r\n  const [todos, setTodos] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  function fetchTodos() {\r\n    setLoading(true);\r\n    globalContext.axios\r\n      .get(\"http://localhost/360wellness/test/backend/public/api/todos\")\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          setTodos(res.data.data.todos)\r\n        } else {\r\n          console.error(res.data);\r\n        }\r\n      }).finally(() => setLoading(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    globalContext.initAxios();\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  function saveTodo(i, event) {\r\n    let {id, content} = todos[i];\r\n    if (id) {\r\n      event.target.disabled = true\r\n      globalContext.axios\r\n        .put(\"http://localhost/360wellness/test/backend/public/api/todo/\"+id, { content })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            alert('Updated successfully!')\r\n          } else {\r\n            console.error(res.data);\r\n          }\r\n        }).finally(() => event.target.disabled = false);\r\n    } else {\r\n      event.target.disabled = true;\r\n      globalContext.axios\r\n        .post(\"http://localhost/360wellness/test/backend/public/api/todo\", { content })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            setTodos(state => {\r\n              const todo = [...state];\r\n              todo[i].id = res.data.data.todo.id\r\n              return todo;\r\n            });\r\n            alert('Saved successfully!')\r\n          } else {\r\n            console.error(res.data);\r\n          }\r\n        }).finally(() => event.target.disabled = false);\r\n    }\r\n  }\r\n\r\n  async function deleteTodo(i, event) {\r\n    let { id } = todos[i];\r\n    if(id) {\r\n      event.target.disabled = true;\r\n      await globalContext.axios\r\n        .delete(\"http://localhost/360wellness/test/backend/public/api/todo/\"+id)\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            alert('Deleted successfully!')\r\n          } else {\r\n            console.error(res.data);\r\n            throw new Error('Error while deleteing todo');\r\n          }\r\n        }).finally(() => event.target.disabled = false);\r\n    }\r\n    setTodos(state => {\r\n      const todos = state.filter((todo, index, todos) => {\r\n        return index != i\r\n      });\r\n      return todos;\r\n    });\r\n  }\r\n\r\n  function newTodo() {\r\n    let t = {\r\n      id: '',\r\n      content: ''\r\n    }\r\n    setTodos([...todos, t])\r\n  }\r\n\r\n  function onChangeTodo(event, i) {\r\n    let { value } = event.target;\r\n    setTodos(state => {\r\n      const updated = [...state];\r\n      updated[i].content = value\r\n      return updated;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <button onClick={newTodo}>New Todo</button>\r\n        <table style={{ 'maxHeight': '700px', 'width': '1200px', 'margin': 'auto' }}>\r\n          <thead>\r\n            <tr>\r\n              <td width=\"10%\">ID</td>\r\n              <td width=\"70%\">Todo</td>\r\n              <td width=\"20%\">Actions</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              loading\r\n              ?\r\n              <tr>\r\n                <td></td>\r\n                <td className=\"text-center\">\r\n                  <h1>Loading...</h1>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n              :\r\n                todos.map(function (item, i) {\r\n                  return <tr key={i}>\r\n                    <td>{item.id || 'NA'}</td>\r\n                    <td><textarea value={item.content} onInput={(event) => onChangeTodo(event, i)}></textarea></td>\r\n                    <td>\r\n                      <button onClick={(event) => {saveTodo(i, event)}}> Save</button>\r\n                      <button onClick={(event) => {deleteTodo(i, event)}}> Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useRef, useState, useContext, useEffect } from \"react\"\r\nimport { GlobalContext } from \"../GlobalContext\"\r\nimport { Link, useNavigate  } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const nameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const globalContext = useContext(GlobalContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate ()\r\n  \r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    globalContext.setError(\"\")\r\n    setLoading(true)\r\n    globalContext.axios\r\n      .post(\"http://localhost/360wellness/test/backend/public/api/login\", { email: emailRef.current.value, password: passwordRef.current.value })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          globalContext.setAuthInfo({user: res.data.data.user, token: res.data.data.access_token});\r\n          setTimeout(() => {navigate(\"/\");}, 1000)\r\n        } else {\r\n          console.error(res.data);\r\n          globalContext.setError(\"Wrong email or password!\")\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"text-center\">Login In</h2>\r\n      {globalContext.error && <div className=\"text-danger text-center\">{globalContext.error}</div>}\r\n      <table style={{'maxWigth': '50%', 'margin': 'auto'}}>\r\n        <tbody>\r\n            <tr id=\"email\">\r\n              <td>\r\n                <label>Email</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"email\" ref={emailRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr id=\"password\">\r\n              <td>\r\n                <label>Password</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"password\" ref={passwordRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n                <td>\r\n                    <button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                    Login\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <div className=\"text-center\">\r\n                        Don't have an account?\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  )\r\n}","import React, { useRef, useState, useContext, useEffect } from \"react\"\r\nimport { GlobalContext } from \"../GlobalContext\"\r\nimport { Link, useNavigate  } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const nameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const globalContext = useContext(GlobalContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate ()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    globalContext.setError(\"\")\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return globalContext.setError(\"Passwords do not match\")\r\n    }\r\n    setLoading(true)\r\n    let res = await globalContext.axios.post(\"http://localhost/360wellness/test/backend/public/api/signup\", { \r\n      name: nameRef.current.value,\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n      confirm_password: passwordConfirmRef.current.value\r\n    });\r\n    if (res.data.success) {\r\n      globalContext.setAuthInfo({user: res.data.data.user, token: res.data.data.access_token});\r\n    } else {\r\n      console.error(res.data);\r\n    }\r\n    navigate(\"/\")\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"text-center\">Sign Up</h2>\r\n      {globalContext.error && <div className=\"text-danger text-center\">{globalContext.error}</div>}\r\n      <table style={{'maxWigth': '50%', 'margin': 'auto'}}>\r\n        <tbody>\r\n            <tr id=\"name\">\r\n              <td>\r\n                <label>Name</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"text\" ref={nameRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr id=\"email\">\r\n              <td>\r\n                <label>Email</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"email\" ref={emailRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr id=\"password\">\r\n              <td>\r\n                <label>Password</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"password\" ref={passwordRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr id=\"password-confirm\">\r\n              <td>\r\n              <label>Password Confirmation</label>\r\n              </td>\r\n              <td>\r\n                <input type=\"password\" ref={passwordConfirmRef} required />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                    Sign Up\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <div className=\"text-center\">\r\n                        Already have an account?\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <Link to=\"/login\">Log In</Link>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  )\r\n}","import React, { useState, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { GlobalContext } from \"../GlobalContext\"\r\n\r\nexport default function Header({children}) {\r\n  const globalContext = useContext(GlobalContext)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  function logout(event) {\r\n    event.preventDefault()\r\n    event.target.classList.toggle('disabled');\r\n    setLoading(true)\r\n    globalContext.axios\r\n      .post(\"http://localhost/360wellness/test/backend/public/api/logout\")\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          globalContext.setAuthInfo({user: null, token: null});\r\n        } else {\r\n          console.error(res.data);\r\n        }\r\n      }).finally(() => {\r\n        setLoading(false)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\" style={{'marginBottom': '30px'}}>\r\n        <h1> Dashboard</h1>\r\n        <h4> Hi {globalContext.authenticatedUser.name}!</h4>\r\n        <Link className=\"btn\" to='/update-profile'> Profile</Link>\r\n        <Link className=\"btn\" to='/'> Todos</Link>\r\n        <a className=\"btn\" disabled={loading} href='#' onClick={logout}> Logout</a>\r\n      </div>\r\n      {children}\r\n    </>\r\n  )\r\n}","import { React, useContext } from \"react\"\r\nimport { Outlet, Navigate } from \"react-router-dom\"\r\nimport { GlobalContext } from \"./GlobalContext\"\r\nimport Header from \"./components/Header\"\r\n\r\nexport default function PrivateRoute({ ...props }) {\r\n  const { authenticatedUser } = useContext(GlobalContext);\r\n  return authenticatedUser ? <Header><Outlet /></Header> : <Navigate to=\"/login\" />;\r\n}","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { GlobalContext } from \"../GlobalContext\"\r\n\r\nexport default function UpdateProfile() {\r\n  const globalContext = useContext(GlobalContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [form, setForm] = useState({\r\n    name: {\r\n      value: '',\r\n      validate: () => {\r\n        return this.value.trim() !== '';\r\n      }\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    globalContext.initAxios()\r\n    setForm((state) => {\r\n      let updated = {...state};\r\n      Object.keys(updated).forEach(function(fieldName) {\r\n        if (globalContext.authenticatedUser[fieldName]) updated[fieldName].value = globalContext.authenticatedUser[fieldName];\r\n      });\r\n      return updated;\r\n    });\r\n  }, [globalContext.authenticatedUser]);\r\n  function setValue(event) {\r\n    let {name, value} = event.target\r\n    setForm((state) => {\r\n      let updated = {...state};\r\n      updated[name].value = value\r\n      return updated;\r\n    });\r\n  }\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    Object.keys(form).forEach(function(fieldName) {\r\n      form[fieldName].validate.bind(form[fieldName])\r\n    });\r\n    setLoading(true)\r\n    globalContext.axios\r\n      .post(\"http://localhost/360wellness/test/backend/public/api/update-profile\")\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          globalContext.setAuthenticatedUser((state) => {\r\n            let user = {...state};\r\n            Object.keys(form).forEach(function(fieldName) {\r\n              user[fieldName] = form[fieldName].value;\r\n            });\r\n            return user;\r\n          })\r\n          alert('Profile updated successfully');\r\n        } else {\r\n          console.error(res.data);\r\n        }\r\n      }).finally(() => {\r\n        setLoading(false)\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1> UpdateProfile</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"name\" onInput={setValue} value={form.name.value}/>\r\n          <button disabled={loading} type=\"submit\"> Update</button>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}","import './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\nimport TodoList from \"./components/TodoList\"\nimport Login from \"./components/Login\"\nimport Signup from \"./components/Signup\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport { GlobalContextProvider } from \"./GlobalContext\"\n\nfunction App() {\n  \n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"text-center\">\n            React Todo App\n          </h1>\n        </header>\n          <BrowserRouter>\n            <GlobalContextProvider>\n            <Routes>\n              <Route exact path='/' element={<PrivateRoute/>}>\n                <Route exact path='/' element={<TodoList/>}></Route>\n                <Route exact path='/update-profile' element={<UpdateProfile/>}></Route>\n              </Route>\n              <Route exact path=\"/signup\" element={<Signup/>}></Route>\n              <Route exact path=\"/login\" element={<Login/>}></Route>\n            </Routes>\n            </GlobalContextProvider>\n          </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}